from discord.ext import commands
import asyncio
import requests
import json
import youtube_dl
import discord

apikey='AIzaSyAxoOzmqHSjvkv0LzYm5v4vUzvjorBu374'
token='NDg5OTM5NzQyMTc2MDUxMjAx.Dn3ahA.YtXIDfkkX4GIqrUUb2uqFSiaM6k'

# https://discordapp.com/oauth2/authorize?&client_id=489939742176051201&scope=bot&permissions=0

bot = commands.Bot(command_prefix='!')

voices={}

youtube_dl_options = {
    'source_address': '0.0.0.0',
    'format': 'bestaudio/best',
    'extractaudio': True,
    'audioformat': "mp3",
    'nocheckcertificate': True,
    'ignoreerrors': False,
    'postprocessors': [{
        'key': 'FFmpegExtractAudio',
        'preferredcodec': 'mp3',
        'preferredquality': '192',
    }],
    # 'quiet': True,
    'no_warnings': True,
    'outtmpl': "/home/samrenfou/.script/python/bot_discord_test/audio/output.%(ext)s",
    'default_search': 'auto',
    'encoding': 'utf-8'
}

ydl = youtube_dl.YoutubeDL(youtube_dl_options)


@bot.event
async def on_ready():
    print('-------------------------')
    print('Bot is Ready to do Shits')
    print('Bot id : {}'.format(bot.user.id))
    print('Bot name : {}'.format(bot.user.name))
    print('-------------------------')

    
@bot.command()
async def vid(ctx,*args):
    await ctx.send('Je cherche... je cherche...')
    searchshit = ' '.join(args)
    await ctx.send('J\'ai trouvé ça pour {}:\n'.format(searchshit))
    await ctx.send(youtubesearch(searchshit)[0])
    listesearch=youtubesearch(searchshit)[1]
    await ctx.send('Choisi le numéro')
    def check(m):
        return m.author == ctx.author
    msg = await bot.wait_for('message', check=check)
    num=int(msg.content)
    await ctx.send('https://www.youtube.com/watch?v={}'.format(listesearch[num-1]))
        
        
@bot.command()
async def music(ctx,arg1,*args):
    server = ctx.guild
    if(arg1=='search'):
        await ctx.send('Je cherche... je cherche...')
        searchshit = ' '.join(args)
        await ctx.send('J\'ai trouvé ça pour {}:\n'.format(searchshit))
        await ctx.send(youtubesearch(searchshit)[0])
        listesearch=youtubesearch(searchshit)[1]
        await ctx.send('Choisi un numéro')
        def check(m):
            return m.author == ctx.author
        msg = await bot.wait_for('message', check=check)
        num=int(msg.content)
        channel=ctx.author.voice.channel
        await ctx.send('Laisse moi le temps de chier un fichier audio à partir de ça')
          ydl.download(['https://www.youtube.com/watch?v='+listesearch[num-1]])
        voice= await channel.connect()
        player=discord.FFmpegPCMAudio('/home/samrenfou/.script/python/bot_discord_test/audio/output.mp3')
        voices[server.id] = voice
        voice.play(player)

        
    elif(arg1=='url'):
        await ctx.send('Laisse moi le temps de chier un fichier audio à partir de ça')
        ydl.download([str(args)])
        voice= await channel.connect()
        player=discord.FFmpegPCMAudio('/home/samrenfou/.script/python/bot_discord_test/audio/output.mp3')
        voices[server.id] = voice
        voice.play(player)


    
@bot.command()
async def pause(ctx):
    id=ctx.guild.id
    voices[id].pause()
    
@bot.command()
async def resume(ctx):
    id=ctx.guild.id
    voices[id].resume()
    
@bot.command()
async def stop(ctx):
    id=ctx.guild.id
    voices[id].stop()
    await voices[id].disconnect()
    
# @bot.command()
# async def helpme(ctx):
#     await ctx.send(
#         "Salut moi c'est Bottest et j'ai en moi certaines fonctions sympatoches :"
#         "     !search \"options\" \"arguments\" : Permet de faire une recherche youtube sans bouger de discord"
#         "         Exemple : !search OneyNG Hellbenders"
#         " "
#         "     !music \"options\" \"arguments\" : Permet d'écouter de la musique sur un voice channel. Plusieurs options possibles :"
#         "         Options 1 : search : Fait une recherche youtube pour \"arguments\" si vous avez la flemme de chercher vous même. Et lance la musique pour la vidéo choisie."
#         "             Exemple : \"!music search Radiohead music cool\""
#         "         Options 2 : url : Lance l'audio de l'url (youtube ou soundcloud) qui est en \"argument\""
#         "             Exemple : \"!music url https://www.leliendetazikmu.com/\""
#         "   "
#         "Vous pouvez controller le stream audio avec !pause, !resume, !stop"
#         " "
#         "C'est tout pour l'instant")

        
def youtubesearch(searchingshit):
    """
    Fait une recherge youtube pour 'searchingshit' et return la réponse et une liste de video ID
    """
    curly= requests.get('https://www.googleapis.com/youtube/v3/search?q='+searchingshit+'&type=video&maxResults=10&part=snippet&key='+apikey)
    data=json.loads(curly.text)
    res=""
    liste=[]
    for i in range(10):
        res+= '%2d: %s \n' % (i+1,data['items'][i]['snippet']['title'])
        liste.append(data['items'][i]['id']['videoId'])
    return res,liste

def author_connected(author):
    channel=author.voice.channel
    if channel is None:
        raise AuthorIsNotConnected
        return False
    else:
        return True

class AuthorIsNotConnected(Exception):
    pass

    
bot.run(token)
