#!/bin/bash

w3m="w3mimgdisplay"
read -r LINES COLUMNS < <(stty size)

draw_img() {
    # Draw an image file on the screen using w3m-img.

    # Get terminal window size in pixels.
    IFS=$'\n' read -d "" -ra win_info \
        < <(xdotool getactivewindow getwindowgeometry --shell)

    # Sets the variables: WIDTH and HEIGHT
    export "${win_info[@]}" &>/dev/null || {
        cmd_line "error: Failed to retrieve window size."
        return
    }

    # Get the image size in pixels.
    read -r img_width img_height < <("$w3m" <<< "5;$1")

    # Substract the status_line area from the image size.
    ((HEIGHT=HEIGHT-HEIGHT*5/LINES))

    ((img_width > WIDTH)) && {
        ((img_height=img_height*WIDTH/img_width))
        ((img_width=WIDTH))
    }

    ((img_height > HEIGHT)) && {
        ((img_width=img_width*HEIGHT/img_height))
        ((img_height=HEIGHT))
    }

    # Add a small delay to fix issues in VTE terminals.
    ((BASH_VERSINFO[0] > 3)) &&
        read -t 0.05 -srn 1

    # Display the image.
    printf '0;1;%s;%s;%s;%s;;;;;%s\n3;\n4\n' \
        "${FFF_W3M_XOFFSET:-0}" \
        "${FFF_W3M_YOFFSET:-0}" \
        "$img_width" \
        "$img_height" \
        "$1" | "$w3m" &>/dev/null

    # Wait for user input.
    read -ern 1

    # Clear the image.
    printf '6;%s;%s;%s;%s\n3;' \
        "${FFF_W3M_XOFFSET:-0}" \
        "${FFF_W3M_YOFFSET:-0}" \
        "$WIDTH" \
        "$HEIGHT" | "$w3m" &>/dev/null

}

draw_img $1
