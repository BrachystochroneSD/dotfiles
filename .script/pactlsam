#!/usr/bin/sh

sinknums=$(pactl list sinks | grep ^Sink | grep -o "[0-9]*")

sourcenum=$(pactl list sources | grep Source | tail -n2 | head -n1) # TODO check the good source
sourcenum=${sourcenum##*#}

check=$(cat /tmp/tmpNID)
[ -z "$check" ] && echo 0 > /tmp/tmpNID

printxfoi(){
    i=0
    while [ $i -lt "$1" ]; do
        printf "$2"
        : $(( i= i + 1 ))
    done
}

print_curr_level () {
    actual_level=$(pactl list sinks | grep  "[^ ]Volume:")
    actual_level=${actual_level%%%*}
    actual_level=${actual_level##* }
    max_level=100 #TODO: make bar with over 100% zone

    pactl list sinks | grep -q "Mute: yes" && icon=Mute_Icon || icon=Speaker_Icon

    # [ $actual_level -gt 100 ] && #TODO: change color when over 100% or maybe block it until you use shift

    curr_level=$(echo "$actual_level / $max_level * 10" | bc -l | awk '{print int($1 + 0.5)}')
    message=$(printxfoi "$curr_level" "⭓")
    message="$message"$(printxfoi $((10 - curr_level)) "⭔")
    NID=$(dunstify -t 1000 -p -i $icon -r "$(cat /tmp/tmpNID)" "$message")
    echo "$NID" > /tmp/tmpNID
}

notif () {
    print_curr_level
    sleep 0.05
    paplay /usr/share/sounds/freedesktop/stereo/dialog-information.oga
}

case $1 in
    --toggle)
        echo "$sinknums" | while read sinknum; do
            pactl set-sink-mute $sinknum toggle
        done
        notif ;;
    --mictoggle) pactl set-source-mute $sourcenum toggle ;;
    --plus)
        echo "$sinknums" | while read sinknum; do
            pactl set-sink-volume $sinknum +$2%
        done
        notif ;;
    --moins)
        echo "$sinknums" | while read sinknum; do
            pactl set-sink-volume $sinknum -$2%
        done
        notif ;;
    --reset)
        echo "$sinknums" | while read sinknum; do
            pactl set-sink-volume $sinknum 100%
        done
        notif ;;
    *) "usage: pactlsam --toggle --plus or --moins"
esac
