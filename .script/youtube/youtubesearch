#!/bin/sh

# get my private ytapikey
. "${HOME}/.authentification/apikeys.sh"

# colors from wpgtk/pywal
. "${HOME}/.config/wpg/formats/colors.sh"

#Parameters
max_results=30
rss_file=${HOME}/.emacs.d/rss/rss.org
searchhistory=${HOME}/.script/youtube/datas/searchhistory

aborted(){
    echo "Aborted"
    exit
}

save_channel(){
    # Save a channel on a rss.org file 
    check=$(grep "$channelID" "$rss_file")
    [ -z "$check" ] && save_or_not=$(printf "No\nYes" | dmenu -nb "$color0" -nf "$color15" -sb "$color0" -sf "$color3" -i -p "Save this channel ?")
    [ "$save_or_not" = "Yes" ] && printf "*** [[https://www.youtube.com/feeds/videos.xml?channel_id=%s][%s]]\n" "$channelID" "$channame" >> "$rss_file"
}

get_channel_id(){
    channelsearch=$(curl -s \
			 -G https://www.googleapis.com/youtube/v3/search \
			 --data-urlencode "q=$channelname" \
			 -d "type=channel" \
			 -d "maxResults=25" \
			 -d "part=snippet" \
			 -d "key=$ytapikey")
    
    chanchoice=$(echo "$channelsearch" | jq -r '.items[] | .snippet.channelTitle' | awk '{printf ("%2d: %s\n",NR,$0)}' | dmenu -nb "$color0" -nf "$color15" -sb "$color0" -sf "$color3" -l 10 -i -p 'Which channel ?')
    channame=$(echo "$chanchoice" | sed 's/.*: //')
    chanchoice=$(echo "$chanchoice" | sed 's/:.*//')
    [ -z "$chanchoice" ] && youtube_search
    : $(( numchan=chanchoice-1 ))
    channelID=$(echo "$channelsearch" | jq -r '.items['$numchan'].snippet.channelId')
}

youtube_search(){
    channelID=""
    searchingshit=$(tail -n 1 "$searchhistory" | awk '{print$0}END{printf "\nShow History\nChannel option"}' | dmenu -nb "$color0" -nf "$color15" -sb "$color0" -sf "$color3" -i -l 20 -p "Youtube search:") || aborted
    if [ "$searchingshit" = "Channel option" ];then
	channelname=$(echo | dmenu -nb "$color0" -nf "$color15" -sb "$color0" -sf "$color3" -p "Channel Search") || youtube_search
        get_channel_id
	save_channel
	
	searchingshit=$(echo | dmenu -nb "$color0" -nf "$color15" -sb "$color0" -sf "$color3" -i -l 20 -p "Search on this channel:") || youtube_search
    elif [ "$searchingshit" = "Show History" ];then
	     searchingshit=$(dmenu -nb "$color0" -nf "$color15" -sb "$color0" -sf "$color3" -i -l 20 -p "Search in History:" < "$searchhistory") || youtube_search
    else
	echo "$searchingshit" >> "$searchhistory"
	printf "Searching for %s\n" "$searchingshit"
    fi

    if [ -z "$channelID" ] ; then
	youtubesearchdata=$(curl -s \
				 -G https://www.googleapis.com/youtube/v3/search \
				 -d "type=video" \
				 -d "maxResults=$max_results" \
				 -d "key=$ytapikey" \
				 -d "order=date" \
				 -d "part=snippet" \
				 --data-urlencode "q=$searchingshit"
				 )
    else
	youtubesearchdata=$(curl -s \
				 -G https://www.googleapis.com/youtube/v3/search \
				 -d "type=video" \
				 -d "order=date" \
				 -d "maxResults=$max_results" \
				 -d "key=$ytapikey" \
				 -d "part=snippet" \
				 -d "channelId=$channelID" \
				 --data-urlencode "q=$searchingshit"
				 )
    fi
    video=$(echo "$youtubesearchdata" | jq -r '.items[] | .snippet.title, .snippet.channelTitle, .snippet.publishedAt' | awk '{printf ("%.85s\n",$0)}' | awk '(NR%3==1){name=$0}(NR%3==2){date=$0}(NR%3==0){printf ("%2d: %-85s %-20s %.10s \n", NR/3, name, date, $0)}' | sed 's/|//g' | dmenu -nb "$color0" -nf "$color15" -sb "$color0" -sf "$color3" -l 30 -i -p 'YTSearch' | sed 's/:.*//')
    [ -z "$video" ] && youtube_search

    : $(( num= video - 1 ))

    videoID=$(echo "$youtubesearchdata" | jq -r '.items['$num'].id.videoId')

    printf "https://www.youtube.com/watch?v=%s" "$videoID" | xclip -selection clipboard # clipboard to share with your friend !

    res=$(printf "720\n1080\n360" | dmenu -nb "$color0" -nf "$color15" -sb "$color0" -sf "$color3" -i -p "Which resolution? (if avalaible)") || youtube_search

    mpv --ytdl-format="[height<=?$res]" "https://www.youtube.com/watch?v=$videoID"
    exit
}

if ping -q -c 1 -W 1 1.1.1.1 >/dev/null 2>&1; then
    youtube_search
else
    notify-send "No internet connection"
fi
