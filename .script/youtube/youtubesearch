#!/bin/sh

# get my private ytapikey
. "${HOME}/.authentification/apikeys.sh"

# colors from wpgtk/pywal
. "${HOME}/.cache/wal/colors.sh"

#Parameters
max_results=35
rss_file=${HOME}/.emacs.d/elfeed.org
searchhistory=${HOME}/.script/youtube/searchhistory
touch $searchhistory

#Commands
dmenucmd="dmenu -nb $color0 -nf $color15 -sb $color0 -sf $color3"
notifycmd="dunstify -i owl"

COLS=$(tput cols)

aborted(){
    echo "Aborted"
    exit
}

htmltoascii () {
    cat | sed 's/&amp;/\&/g; s/&lt;/</g; s/&gt;/>/g; s/&quot;/\"/g; s/&\#39;/'"'"'/g'
}
    # echo $(cat | sed 's/&nbsp;/ /g; s/&amp;/\&/g; s/&lt;/\</g; s/&gt;/\>/g; s/&quot;/\"/g; s/#&#39;/\'"'"'/g; s/&ldquo;/\"/g; s/&rdquo;/\"/g;')

save_channel(){
    # Save a channel on a rss.org file
    check=$(grep "$channelID" "$rss_file")
    [ -z "$check" ] && save_or_not=$(printf "No\nYes" | $dmenucmd -i -p "Save this channel ?")
    [ "$save_or_not" = "Yes" ] && printf "*** [[https://www.youtube.com/feeds/videos.xml?channel_id=%s][%s]]\n" "$channelID" "$channame" >> "$rss_file"
}

get_channel_id(){
    channelsearch=$(curl -s \
			 -G https://www.googleapis.com/youtube/v3/search \
			 --data-urlencode "q=$channelname" \
			 -d "type=channel" \
			 -d "maxResults=25" \
			 -d "part=snippet" \
			 -d "key=$ytapikey")

    chanchoice=$(echo "$channelsearch" | jq -r ".items[] | .snippet.channelTitle, .snippet.description" | awk '(NR%2==1){chantitle=$0}(NR%2==0){printf ("%2d: %s : %s\n",NR/2,chantitle,$0)}' | $dmenucmd -l 25 -i -p "Which channel ?")
    channame=$(echo "$chanchoice" | sed -r 's/[ 0-9]+: //' | sed 's/ :.*//')
    channum=$(echo "$chanchoice" | sed 's/:.*/-1/' | bc)
    [ -z "$channum" ] && youtube_search
    channelID=$(echo "$channelsearch" | jq -r ".items[$channum].snippet.channelId")
}

youtube_search(){
    channelID=""
    searchingshit=$(head -n 1 "$searchhistory" | awk '{print$0}END{printf "\nChannel Search\nOrder\nShow History\nClear History"}' | $dmenucmd -i -l 20 -p "Youtube search:") || aborted

    case "$searchingshit" in
	"Channel Search")
	    channelname=$(grep "youtube.com" "$rss_file" | sed 's/\*\*\* \[\[.*\]\[//' | sed 's/\]\]//' | $dmenucmd -l 10 -i -p "Channel Search") || youtube_search
            get_channel_id
	    save_channel
	    searchingshit=$(echo | $dmenucmd -i -l 20 -p "Search on this channel:") || youtube_search
	    ;;

        "Order") sort=$(echo -e "relevance\ndate\nrating\ntitle\nviewCount" | $dmenucmd -i -l 20 -p "Sort by: "); youtube_search ;;

	"Show History")
	    searchingshit=$( $dmenucmd -i -l 20 -p "Search in History:" < "$searchhistory" ) || youtube_search
	    ;;

	"Clear History")
	    printf "" > "$searchhistory" && youtube_search
	    ;;

	*)
            grep -q "^$searchingshit$" "$searchhistory" || { echo "$searchingshit"; cat "$searchhistory"; } > /tmp/youthistotmp && mv /tmp/youthistotmp "$searchhistory"
	    printf "Searching for %s\n" "$searchingshit"
    esac

    [ -z "$sort" ] && sort="relevance"

    if [ -z "$channelID" ];then
	youtubesearchdata=$(curl -s \
				 -G https://www.googleapis.com/youtube/v3/search \
				 -d "type=video,playlist" \
				 -d "maxResults=$max_results" \
				 -d "key=$ytapikey" \
				 -d "part=snippet" \
			         -d "order=$sort" \
                                 -d "relevanceLanguage=en" \
                                 -d "relevanceLanguage=fr" \
				 --data-urlencode "q=$searchingshit"
			 )
    else
	youtubesearchdata=$(curl -s \
				 -G https://www.googleapis.com/youtube/v3/search \
				 -d "type=video,playlist" \
				 -d "maxResults=$max_results" \
				 -d "key=$ytapikey" \
				 -d "part=snippet" \
			         -d "order=$sort" \
				 -d "channelId=$channelID" \
                                 -d "relevanceLanguage=en" \
                                 -d "relevanceLanguage=fr" \
				 --data-urlencode "q=$searchingshit"
			 )
    fi

    testcold=$(echo "$COLS" / 2.2 | bc)
    choicenum=$(echo "$youtubesearchdata"| jq -r ".items[] | .id.kind,.snippet.title, .snippet.channelTitle, .snippet.publishedAt" | htmltoascii | awk -v cols="$testcold" '(NR%4==1){if($0=="youtube#playlist"){play="Playlist : "}else{play=""}}(NR%4==2){name=$0}(NR%4==3){chan=$0}(NR%4==0){printf ("%2d: %-" cols "s %-15s %.10s \n", NR/4, substr(play name,0,cols), substr(chan,0,15), $0)}' | sed 's/|//g' | $dmenucmd -l 30 -i | sed 's/:.*/ - 1/' | bc )

    [ -z "$choicenum" ] && youtube_search

    choicekind=$(echo "$youtubesearchdata" | jq -r ".items[$choicenum].id")

    if [ "$( echo "$choicekind" | jq -r ".kind" )" = "youtube#video" ];then
	link="https://www.youtube.com/watch?v=$(echo "$choicekind" | jq -r ".videoId")"
    else
	link="https://www.youtube.com/playlist?list=$(echo "$choicekind" | jq -r ".playlistId")"
    fi

    echo "$link" | xclip -selection clipboard # clipboard to share with your friend !

    res=$(printf "720\n1080\n360" | $dmenucmd -i -p "Which resolution? (if avalaible)") || youtube_search

    mpv --ytdl-format="[height<=?$res]" "$link" || $notifycmd  "MPV ERROR " "Can't launch the video"
    exit
}

if ping -q -c 1 -W 1 1.1.1.1 >/dev/null 2>&1;then
    youtube_search
else
    $notifycmd "No internet connection"
fi
