#!/bin/bash

# parameters
appid=7fd03f521f1f63d4f21335b700747609
current=${HOME}/.script/polybar/weatherdir/datas/current
forecast=${HOME}/.script/polybar/weatherdir/datas/forecast

icons() {
    case $1 in
        "clear sky") icon="";;
	#rain
	"light rain") icon="";;
	"moderate rain") icon="";;
	"heavy intensity rain") icon="";;
	"very heavy rain") icon="";;
	"extreme rain") icon="";;
	"freezing rain") icon="";;
	"light intensity shower rain") icon="";;
	"shower rain") icon="";;
	"heavy intensity shower rain") icon="";;
	"ragged shower rain") icon="";;
	#thunderstorm
	"thunderstorm with light rain") icon="";;
	"thunderstorm with rain") icon="";;
	"thunderstorm with heavy rain") icon="";;
	"light thunderstorm") icon="";;
	"thunderstorm") icon="";;
	"heavy thunderstorm") icon="";;
	"ragged thunderstorm") icon="";;
	"thunderstorm with light drizzle") icon="";;
	"thunderstorm with drizzle") icon="";;
	"thunderstorm with heavy drizzle") icon="";;
	#drizzle
	"light intensity drizzle") icon="";;
	"drizzle") icon="";;
	"heavy intensity drizzle") icon="";;
	"light intensity drizzle rain") icon="";;
	"drizzle rain") icon="";;
	"heavy intensity drizzle rain") icon="";;
	"shower rain and drizzle") icon="";;
	"heavy shower rain and drizzle") icon="";;
	"shower drizzle") icon="";;
	#snow
	"light snow") icon="";;
	"snow") icon="";;
	"heavy snow") icon="";;
	"sleet") icon="";;
	"shower sleet") icon="";;
	"light rain and snow") icon="";;
	"rain and snow") icon="";;
	"light shower snow") icon="";;
	"shower snow") icon="";;
	"heavy shower snow") icon="";;
	#atmoshpere
	"mist") icon="";;
	"smoke") icon="";;
	"haze") icon="";;
	"sand, dust whirls") icon="";;
	"fog") icon="";;
	"sand") icon="";;
	"dust") icon="";;
	"volcanic ash") icon="";;
	"squalls") icon="";;
	"tornado") icon="";;
	#clouds
	"few clouds") icon="";;
	"scattered clouds") icon="";;
	"broken clouds") icon="";;
	"overcast clouds") icon="";;
    esac

    echo $icon
}

round() {
    echo $1 
}

get_datas(){
    location=$(curl -s ipinfo.io/geo | jq .loc)
    lat=$(echo $location | sed 's/,.*//' | sed 's/^.//')
    long=$(echo $location | sed 's/.*,//' | sed 's/.$//')
    curl -s 'http://api.openweathermap.org/data/2.5/weather?lat='$lat'&lon='$long'&APPID='$appid'&units=metric'> $current
    curl -s 'http://api.openweathermap.org/data/2.5/forecast?lat='$lat'&lon='$long'&APPID='$appid'&units=metric'>$forecast
}

echocurrent(){
    icon=$(cat $current | jq .weather[0].description | sed 's/"//g')
    humidity=$(cat $current \
		   | jq .main.humidity)
    
    temp=$(cat $current \
	       | jq .main.temp \
	       | awk '{print int($1+0.5)}')
    
    echo "$(icons "$icon")" $humidity% $temp°C
}

echoforecast(){
    icon=$(cat $forecast \
	       | jq .list[$1].weather[0].description \
	       | sed 's/"//g')
    
    if [[ $icon != null ]];then
	
	humidity=$(cat $forecast \
		       | jq .list[$1].main.humidity \
		       | awk '{print int($1+0.5)}')
	
	tempMin=$(cat $forecast \
		      | jq .list[$1].main.temp_min)
	
	tempMax=$(cat $forecast \
		      | jq .list[$1].main.temp_max)
	
	temp=$(echo "( $tempMin + $tempMax ) / 2" \
		   | bc -l \
		   | awk '{print int($1+0.5)}')
	echo "$(icons "$icon")" $humidity% $temp°C
    fi
}

checktime(){
    isnow=$(date +%s)
    i=0
    nummax=$(cat $forecast | jq .cnt)
    while [ $i -le $nummax ];do
	timetest=$(cat $forecast | jq .list[$i].dt)
	(( res= $isnow - $timetest ))
	if [[ $res -le 0 ]];then
	    ((i= $i - 1))
	    break
	fi
	((i= $i + 1))
    done
    if [ $i == 40 ];then
	echo "Need Update"
    elif [ $i -le 0 ];then
	((i= $i + 1))
	echoforecast $i
    else
	echoforecast $i
    fi
}

#check internet connection

if ping -q -c 1 -W 1 1.1.1.1 &>/dev/null; then
    get_datas
    echocurrent
else
    checktime
fi
