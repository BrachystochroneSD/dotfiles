#!/bin/sh

. "${HOME}/.cache/wal/colors.sh"
DMENU_CMD="dmenu -nb $color0 -nf $color15 -sb $color0 -sf $color3"

ethdev=$(ip link | grep -E "[0-9]: e.*: " | grep UP | sed 's/[0-9]: \(e.*\): .*/\1/')
wifidev=$(ip link | grep -E "[0-9]: w.*: " | grep UP | sed 's/[0-9]: \(w.*\): .*/\1/')

inversebool () {
    [[ "$1" = 0 ]] && echo 1 || echo 0
}

getifstat () {
    ifstat -n
    if [[ -n $(grep "$wifidev" /tmp/.ifstat.u"$UID") ]];then
        read received transmitted <<EOF
$(grep "$wifidev" /tmp/.ifstat.u"$UID" | awk '{print $7 " " $9}')
EOF
        recminus=$(cat /tmp/wififstatrxzero 2>/dev/null)
        transminus=$(cat /tmp/wififstattxzero 2>/dev/null)
        [ -z "$recminus" ] && recminus=0
        [ -z "$transminus" ] && transminus=0

        recplus=$(cat /tmp/wififstatrxzeroplus 2>/dev/null)
        [ -z "$recplus" ] && recplus=0

        received=$(( received - recminus + recplus))
        transmitted=$(( transmitted - transminus ))

        RX="↓$(mean $received)"
        TX="↑$(mean $transmitted)"
    fi
}

mean () {
    units="KMGTP"
    nummean=$(( $(printf $1 | wc -m) / 3 ))
    number=$(echo "$1 / (10 ^ (3 * $nummean) )" | bc -l | cut -c 1-4)
    unit=$(echo $units | cut -c $nummean)
    echo $number$unit
}

format_unit () {
    echo "$1" | sed 's/K/000/;s/M/000000/;s/G/000000000/;s/T/000000000000/'
}

setup_zero () {
    read rxzero txzero <<EOF
$(grep "$wifidev" /tmp/.ifstat.u$UID | awk '{print $7 " " $9}')
EOF
    echo $txzero > /tmp/wififstattxzero
    [ -n "$1" ] && echo $(format_unit $1) > /tmp/wififstatrxzeroplus || rm -f /tmp/wififstatrxzeroplus
    echo $rxzero > /tmp/wififstatrxzero
}

case $1 in
    --help)
        echo "Need help? Go fuck yourself!"
        ;;
    --prompt-zeros)
        zero=$(echo | $DMENU_CMD -p "Zero to set:")
        setup_zero "$zero"
        ;;
    --setup-zeros)
        setup_zero "$2"
        ;;
    --toggle-ifstat)
        [[ -f /tmp/wififstattglrx ]] && rm /tmp/wififstattglrx || touch /tmp/wififstattglrx
        ;;
    *)
        [[ -n "$ethdev" ]] && [[ "$(cat /sys/class/net/$ethdev/operstate)" = "up" ]] && output="E"
        if [[ -n "$wifidev" ]];then
            wifi=$(awk 'NR==3 {print substr($4,2,2)}' /proc/net/wireless)
            if [ -n "$wifi" ];then
                if [ "$wifi" -le 55 ];then
                    output="A"
                elif [ "$wifi" -le 75 ];then
                    output="B"
                elif [ "$wifi" -le 85 ];then
                    output="C"
                else
                    output="D"
                fi
            fi
        fi
        [[ -f /tmp/wififstattglrx ]] && getifstat && output="$output $RX $TX"
        echo "$output"
esac
